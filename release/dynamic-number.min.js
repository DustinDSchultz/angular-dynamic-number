"use strict";function convModelToView(e,n){return","===n?String(e).replace(".",","):e}function convViewToModel(e,n){return","===n?String(e).replace(",","."):e}function initIntegerPart(e,n){if(e>=0){var r=parseInt(e,10);if(isNaN(r)===!1&&isFinite(r)&&r>=0)return r}return n}function initFractionPart(e,n){if(e>=0){var r=parseInt(e,10);if(isNaN(r)===!1&&isFinite(r)&&r>=0)return r}return n}function initSeparator(e,n){return","===e?",":"."===e?".":n}function initIsPositive(e,n){return"false"===e?!1:"true"===e?!0:n}function initIsNegative(e,n){return"false"===e?!1:"true"===e?!0:n}function initRound(e,n){return"floor"===e?Math.floor:"ceil"===e?Math.ceil:"round"===e?Math.round:n}function buildRegexp(e,n,r,i,t){var u="-?";i===!1&&t===!0?u="-":i===!0&&t===!1&&(u="");var a="[0-9]{0,"+e+"}";0===e&&(a="0");var o="(\\"+r+"([0-9]){0,"+n+"})";return 0===n&&(o=""),new RegExp("^"+u+a+o+"?$")}function removeLeadingZero(e){return e.replace(/^0+/g,"").replace(/^-00+/g,"-0").replace(/-0+\[\.,]/,"-0$&").replace(/^[\.,]/g,"0$&")}function changeViewValue(e,n){e.$viewValue=n,e.$render()}function filterModelValue(e,n,r,i){if(e=Number(e),!isNaN(e)&&isFinite(e)){var t=Math.pow(10,n);return convModelToView(String(i(e*t)/t),r)}return"0"}function dynamicNumberDirective(){return{restrict:"A",require:"?ngModel",scope:{numInt:"@",numFract:"@",numSep:"@",numPos:"@",numNeg:"@",numRound:"@"},link:function(e,n,r,i){var t=initIntegerPart(e.numInt,6),u=initFractionPart(e.numFract,2),a=initSeparator(e.numSep,"."),o=initIsPositive(e.numPos,!0),c=initIsNegative(e.numNeg,!0),l=initRound(e.numRound,Math.round);if(o===!1&&c===!1)throw new Error("Number is set to not be positive and not be negative. Change num_pos attr or/and num_neg attr to true");var d=buildRegexp(t,u,a,o,c);i.$parsers.unshift(function(e){var n=e;return n=removeLeadingZero(n),""===n&&"0"===e.charAt(0)?(changeViewValue(i,0),0):void 0===n||""===n?0:"-"===n?(changeViewValue(i,n),0):d.test(n)===!1?(changeViewValue(i,convModelToView(i.$modelValue,a)),i.$modelValue):(changeViewValue(i,n),convViewToModel(n,a))}),i.$formatters.push(function(e){return filterModelValue(e,u,a,l)})}}}function dynamicNumberFilter(){return function(e,n,r,i){var t=initFractionPart(n,2),u=initSeparator(r,"."),a=initRound(i,Math.round);return filterModelValue(e,t,u,a)}}angular.module("dynamicNumber",[]).directive("awnum",dynamicNumberDirective).filter("awnum",dynamicNumberFilter);